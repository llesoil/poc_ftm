state.featureenabled(features.evmtxreceiptsversion3_1, false)
state.featureenabled(features.evmtxreceiptsversion3_1, false)
(txid == types.txid_ethereum) && state.featureenabled(features.ethtxfeature, false)
!state.featureenabled(features.multichainsigtxmiddlewareversion1_1, false)
state.featureenabled(features.authsigtxfeatureprefix+"tron", false)
state.featureenabled(features.authsigtxfeatureprefix+"binance", false)
state.featureenabled(features.authsigtxfeatureprefix+chainid, false)
!lvm.state.featureenabled(features.evmtxreceiptsversion3_4, false)
!lvm.state.featureenabled(features.evmtxreceiptsversion3_4, false)
!lvm.state.featureenabled(features.evmtxreceiptsversion3_4, false)
!lvm.state.featureenabled(features.evmtxreceiptsversion3_4, false)
lvm.state.featureenabled(features.evmtxreceiptsversion3_3, false)
lvm.state.featureenabled(features.evmtxreceiptsversion3_3, false)
lvm.state.featureenabled(features.evmtxreceiptsversion3_3, false)
lvm.state.featureenabled(features.evmtxreceiptsversion3_2, false)
lvm.state.featureenabled(features.evmtxreceiptsversion3_2, false)
!lvm.state.featureenabled(features.evmtxreceiptsversion3_4, false)
!lvm.state.featureenabled(features.evmtxreceiptsversion3_4, false)
!lvm.state.featureenabled(features.evmtxreceiptsversion3_4, false)
!lvm.state.featureenabled(features.evmtxreceiptsversion3_4, false)
lvm.state.featureenabled(features.evmtxreceiptsversion3_3, false)
lvm.state.featureenabled(features.evmtxreceiptsversion3_3, false)
lvm.state.featureenabled(features.evmtxreceiptsversion3_3, false)
lvm.state.featureenabled(features.evmtxreceiptsversion3_1, false)
lvm.state.featureenabled(features.evmtxreceiptsversion3_1, false)
ctx.featureenabled(features.coinversion1_2feature, false) && req.amount == nil
ctx.featureenabled(features.coinversion1_3feature, false)
ctx.featureenabled(features.tgversion1_7, false)
ctx.featureenabled(features.coinversion1_2feature, false) && (req.to == nil || req.amount == nil)
ctx.featureenabled(features.coinversion1_1feature, false)
ctx.featureenabled(features.coinversion1_2feature, false) && (req.spender == nil || req.amount == nil)
ctx.featureenabled(features.coinversion1_2feature, false)
ctx.featureenabled(features.coinversion1_1feature, false)
req.delegatoraddress != nil && ctx.featureenabled(features.dposversion3_10, false)
req.delegatoraddress != nil && ctx.featureenabled(features.dposversion3_10, false)
ctx.featureenabled(features.dposversion3_6, false)
!instantunlock && ctx.featureenabled(features.dposversion3_9, false)
!ctx.featureenabled(features.dposversion3_7, false)
!ctx.featureenabled(features.dposversion3_3, false)
req.candidate != nil && ctx.featureenabled(features.dposversion3_10, false)
req.candidate != nil && ctx.featureenabled(features.dposversion3_10, false)
ctx.featureenabled(features.dposversion3_4, false)
!ctx.featureenabled(features.dposversion3_4, false)
!ctx.featureenabled(features.dposversion3_9, false)
ctx.featureenabled(features.dposversion3_3, false)
ctx.featureenabled(features.dposversion3_4, false)
ctx.featureenabled(features.dposversion3_3, false)
!ctx.featureenabled(features.dposversion3_1, false)
ctx.featureenabled(features.dposversion3_1, false)
ctx.featureenabled(features.dposversion3_1, false) && d.index == reward_delegation_index
!ctx.featureenabled(features.dposversion3_2, false)
ctx.featureenabled(features.dposversion3_4, false)
!ctx.featureenabled(features.dposversion3_4, false)
ctx.featureenabled(features.dposversion3_2, false)
ctx.featureenabled(features.dposversion3_5, false)
ctx.featureenabled(features.dposversion3_5, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion2_1, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.dposversion3feature, false)
ctx.featureenabled(features.coinversion1_2feature, false) && req.amount == nil
ctx.featureenabled(features.coinversion1_2feature, false) && (req.amount == nil || req.to == nil)
ctx.featureenabled(features.coinversion1_1feature, false)
ctx.featureenabled(features.coinversion1_2feature, false) && (req.spender == nil || req.amount == nil)
ctx.featureenabled(features.coinversion1_2feature, false) &&(req.amount == nil || req.from == nil || req.to == nil)
ctx.featureenabled(features.coinversion1_1feature, false)
ctx.featureenabled(features.addressmapperversion1_1, false)
!ctx.featureenabled(features.chaincfgversion1_3, false)
ctx.featureenabled(features.dposversion3feature, false)
!ctx.featureenabled(features.chaincfgversion1_1, false)
!ctx.featureenabled(features.chaincfgversion1_2, false)
ctx.featureenabled(features.userdeployerwhitelistversion1_1feature, false)
ctx.featureenabled(features.userdeployerwhitelistversion1_2feature, false)
!ctx.featureenabled(features.userdeployerwhitelistversion1_2feature, false)
ctx.featureenabled(features.userdeployerwhitelistversion1_1feature, false)
!state.featureenabled(features.migrationtxfeature, false)
!state.featureenabled(features.migrationfeatureprefix+id, false)
state.featureenabled(features.migrationtxversion1_1feature, false)
!state.featureenabled(features.ethtxfeature, false)
c.state.featureenabled(features.chaincfgversion1_4, false) &&(minrequiredbuild > c.state.getminbuildnumber())
!c.state.featureenabled(features.chaincfgversion1_3, false)
c.state.featureenabled(features.chaincfgversion1_4, false) &&(minrequiredbuild > c.state.getminbuildnumber())
!state.featureenabled(features.userdeployerwhitelistfeature, false)
!state.featureenabled(features.userdeployerwhitelistfeature, false)
!state.featureenabled(features.deployerwhitelistfeature, false)
!state.featureenabled(features.ethtxfeature, false)
cfg.dposversion == 3 || state.featureenabled(features.dposversion3feature, false)
cfg.dposversion == 3 || state.featureenabled(features.dposversion3feature, false)
