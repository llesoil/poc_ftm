* r.features.Enabled(features.ExpandPersistentVolumes) -> attrs.IsResourceRequest() : 1
* r.features.Enabled(features.TokenRequest) -> attrs.IsResourceRequest() : 1
* r.features.Enabled(features.CSINodeInfo) -> attrs.IsResourceRequest() : 1
* utilfeature.DefaultFeatureGate.Enabled(features.CSIDriverRegistry) -> ok : 1
* !utilfeature.DefaultFeatureGate.Enabled(features.VolumeSubpath) -> mount.SubPathExpr != "" : 1
* !utilfeature.DefaultFeatureGate.Enabled(features.VolumeSubpathEnvExpansion) -> mount.SubPathExpr != "" : 2
* !utilfeature.DefaultFeatureGate.Enabled(features.VolumeSubpath) -> subPath != "" : 1
* utilfeature.DefaultFeatureGate.Enabled(features.LocalStorageCapacityIsolation) -> err != nil : 1
* utilfeature.DefaultFeatureGate.Enabled(features.BlockVolume) -> pvcSource :=
		podVolume.VolumeSource.PersistentVolumeClaim : 1
* config.FeatureGates[string(kubefeatures.IPv6DualStack)] -> config.ClusterCIDR != "" : 1
* !utilfeature.DefaultFeatureGate.Enabled(features.IPv6DualStack) -> serviceCIDR != nil && secondaryServiceCIDR != nil : 1
* utilfeature.DefaultFeatureGate.Enabled(features.IPv6DualStack) -> proxyMode == proxyModeIPTables : 1
* utilfeature.DefaultFeatureGate.Enabled(features.IPv6DualStack) -> proxyMode == proxyModeIPVS : 1
