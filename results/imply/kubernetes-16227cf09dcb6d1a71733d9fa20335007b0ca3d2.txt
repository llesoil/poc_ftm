* r.features.Enabled(features.ExpandPersistentVolumes) -> attrs.IsResourceRequest() : 1
* utilfeature.DefaultFeatureGate.Enabled(features.StatefulSetMinReadySeconds) -> !apiequality.Semantic.DeepEqual(newStatefulSetClone.Spec, oldStatefulSet.Spec) : 1
* utilfeature.DefaultFeatureGate.Enabled(features.HPAContainerMetrics) -> spec.ContainerResource == nil : 1
* utilfeature.DefaultFeatureGate.Enabled(features.ExecProbeTimeout) -> ok -> err != nil : 1
* utilfeature.DefaultFeatureGate.Enabled(features.KubeletInUserNamespace) -> libcontaineruserns.RunningInUserNS() -> err != nil : 1
* !utilfeature.DefaultFeatureGate.Enabled(features.WindowsHostProcessContainers) -> kubecontainer.HasWindowsHostProcessContainer(pod) : 1
* !utilfeature.DefaultFeatureGate.Enabled(features.WindowsHostProcessContainers) -> securitycontext.HasWindowsHostProcessRequest(pod, container) : 1
* utilfeature.DefaultFeatureGate.Enabled(features.LocalStorageCapacityIsolation) -> err != nil : 1
* utilfeature.DefaultFeatureGate.Enabled(kubefeatures.KubeletInUserNamespace) -> libcontaineruserns.RunningInUserNS() -> err != nil : 1
* utilfeature.DefaultFeatureGate.Enabled(features.ServiceLBNodePortControl) -> service.Spec.Type == api.ServiceTypeLoadBalancer : 1
* !utilfeature.DefaultFeatureGate.Enabled(features.LogarithmicScaleDown) -> !readyTime1.Equal(readyTime2) -> podutil.IsPodReady(s.Pods[i]) && podutil.IsPodReady(s.Pods[j]) : 1
* !utilfeature.DefaultFeatureGate.Enabled(features.LogarithmicScaleDown) -> !s.Pods[i].CreationTimestamp.Equal(&s.Pods[j].CreationTimestamp) : 1
* utilfeature.DefaultFeatureGate.Enabled(features.StatefulSetMinReadySeconds) -> isRunningAndReady(pods[i]) : 1
* utilfeature.DefaultFeatureGate.Enabled(features.TopologyAwareHints) -> !remove : 1
* utilfeature.DefaultFeatureGate.Enabled(features.ProxyTerminatingEndpoints) -> onlyNodeLocalEndpoints : 1
* !utilfeature.DefaultFeatureGate.Enabled(kubefeatures.WinOverlay) -> isOverlay(hnsNetworkInfo) : 1
* utilfeature.DefaultFeatureGate.Enabled(features.CPUManager) -> kubeDeps.ContainerManager == nil : 1
* utilfeature.DefaultFeatureGate.Enabled(features.CPUManagerPolicyOptions) -> utilfeature.DefaultFeatureGate.Enabled(features.CPUManager) -> kubeDeps.ContainerManager == nil : 2
